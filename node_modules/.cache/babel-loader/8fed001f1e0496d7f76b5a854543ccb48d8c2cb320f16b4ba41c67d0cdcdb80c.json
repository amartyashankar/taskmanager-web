{"ast":null,"code":"var _jsxFileName = \"/Users/amartyashankar/final copy 2/Projects/notedly/web/src/pages/edit.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport TaskForm from '../components/TaskForm';\nimport { GET_TASK, GET_ME } from '../gql/query';\nimport { EDIT_TASK } from '../gql/mutation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTask = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TASK, {\n    variables: {\n      id\n    }\n  });\n  const {\n    loading: userLoading,\n    error: userError,\n    data: userData\n  } = useQuery(GET_ME);\n  const [editTask] = useMutation(EDIT_TASK, {\n    onCompleted: () => {\n      navigate(`/task/${id}`);\n    }\n  });\n  if (loading || userLoading) return 'Loading...';\n  if (error || userError) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error loading data!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 34\n  }, this);\n  if (!userData || !data || userData.me.id !== data.task.author.id) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You do not have access to edit this task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(TaskForm, {\n    type: \"edit\",\n    action: editTask,\n    task: data.task\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n_s(EditTask, \"K11CvEbkemWVBE38Gyj5RPUltJI=\", false, function () {\n  return [useParams, useNavigate, useQuery, useQuery, useMutation];\n});\n_c = EditTask;\nexport default EditTask;\nvar _c;\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["React","useMutation","useQuery","useParams","useNavigate","TaskForm","GET_TASK","GET_ME","EDIT_TASK","jsxDEV","_jsxDEV","EditTask","_s","id","navigate","loading","error","data","variables","userLoading","userError","userData","editTask","onCompleted","children","fileName","_jsxFileName","lineNumber","columnNumber","me","task","author","type","action","_c","$RefreshReg$"],"sources":["/Users/amartyashankar/final copy 2/Projects/notedly/web/src/pages/edit.js"],"sourcesContent":["import React from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nimport TaskForm from '../components/TaskForm';\nimport { GET_TASK, GET_ME } from '../gql/query';\nimport { EDIT_TASK } from '../gql/mutation';\n\nconst EditTask = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const { loading, error, data } = useQuery(GET_TASK, { variables: { id } });\n  const {\n    loading: userLoading,\n    error: userError,\n    data: userData,\n  } = useQuery(GET_ME);\n\n  const [editTask] = useMutation(EDIT_TASK, {\n    onCompleted: () => {\n      navigate(`/task/${id}`);\n    },\n  });\n\n  if (loading || userLoading) return 'Loading...';\n  if (error || userError) return <p>Error loading data!</p>;\n\n  if (!userData || !data || userData.me.id !== data.task.author.id) {\n    return <p>You do not have access to edit this task</p>;\n  }\n\n  return <TaskForm type=\"edit\" action={editTask} task={data.task} />;\n};\n\nexport default EditTask;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,gBAAgB;AACtD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAEzD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,QAAQ,EAAEC,MAAM,QAAQ,cAAc;AAC/C,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAM;IAAEW,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGf,QAAQ,CAACI,QAAQ,EAAE;IAAEY,SAAS,EAAE;MAAEL;IAAG;EAAE,CAAC,CAAC;EAC1E,MAAM;IACJE,OAAO,EAAEI,WAAW;IACpBH,KAAK,EAAEI,SAAS;IAChBH,IAAI,EAAEI;EACR,CAAC,GAAGnB,QAAQ,CAACK,MAAM,CAAC;EAEpB,MAAM,CAACe,QAAQ,CAAC,GAAGrB,WAAW,CAACO,SAAS,EAAE;IACxCe,WAAW,EAAEA,CAAA,KAAM;MACjBT,QAAQ,CAAC,SAASD,EAAE,EAAE,CAAC;IACzB;EACF,CAAC,CAAC;EAEF,IAAIE,OAAO,IAAII,WAAW,EAAE,OAAO,YAAY;EAC/C,IAAIH,KAAK,IAAII,SAAS,EAAE,oBAAOV,OAAA;IAAAc,QAAA,EAAG;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEzD,IAAI,CAACP,QAAQ,IAAI,CAACJ,IAAI,IAAII,QAAQ,CAACQ,EAAE,CAAChB,EAAE,KAAKI,IAAI,CAACa,IAAI,CAACC,MAAM,CAAClB,EAAE,EAAE;IAChE,oBAAOH,OAAA;MAAAc,QAAA,EAAG;IAAwC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACxD;EAEA,oBAAOlB,OAAA,CAACL,QAAQ;IAAC2B,IAAI,EAAC,MAAM;IAACC,MAAM,EAAEX,QAAS;IAACQ,IAAI,EAAEb,IAAI,CAACa;EAAK;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpE,CAAC;AAAChB,EAAA,CAzBID,QAAQ;EAAA,QACGR,SAAS,EACPC,WAAW,EAEKF,QAAQ,EAKrCA,QAAQ,EAEOD,WAAW;AAAA;AAAAiC,EAAA,GAX1BvB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}