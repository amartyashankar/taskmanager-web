{"ast":null,"code":"var _jsxFileName = \"/Users/amartyashankar/final copy 2/Projects/notedly/web/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  height: 100%;\n`;\n_c = Wrapper;\nconst Form = styled.form`\n  height: 100%;\n`;\n_c2 = Form;\nconst Input = styled.input`\n  width: 100%;\n  margin-bottom: 10px;\n  padding: 8px;\n`;\n_c3 = Input;\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 90%;\n`;\n_c4 = TextArea;\nconst TaskForm = ({\n  type,\n  action,\n  task = {}\n}) => {\n  _s();\n  // Set default state for the form\n  const [value, setValue] = useState({\n    title: task.title || '',\n    description: task.description || '',\n    status: task.status || ''\n  });\n\n  // Update the state when a user types in the form\n  const onChange = event => {\n    setValue({\n      ...value,\n      [event.target.name]: event.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => {\n        e.preventDefault();\n        if (type === 'edit') {\n          action({\n            variables: {\n              id: task.id,\n              status: value.status\n            }\n          });\n        } else {\n          action({\n            variables: {\n              ...value\n            }\n          });\n        }\n      },\n      children: [type === 'new' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          required: true,\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"Task title\",\n          value: value.title,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          required: true,\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Task description\",\n          value: value.description,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(TextArea, {\n        required: true,\n        type: \"text\",\n        name: \"status\",\n        placeholder: \"Task status\",\n        value: value.status,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: type === 'edit' ? 'Update' : 'Create'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"ptHbweo9vCpCV8j0Fyf3PlD6o6M=\");\n_c5 = TaskForm;\nexport default TaskForm;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"TextArea\");\n$RefreshReg$(_c5, \"TaskForm\");","map":{"version":3,"names":["React","useState","styled","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Wrapper","div","_c","Form","form","_c2","Input","input","_c3","TextArea","textarea","_c4","TaskForm","type","action","task","_s","value","setValue","title","description","status","onChange","event","target","name","children","onSubmit","e","preventDefault","variables","id","required","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/amartyashankar/final copy 2/Projects/notedly/web/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Button from './Button';\n\nconst Wrapper = styled.div`\n  height: 100%;\n`;\n\nconst Form = styled.form`\n  height: 100%;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  margin-bottom: 10px;\n  padding: 8px;\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 90%;\n`;\n\nconst TaskForm = ({ type, action, task = {} }) => {\n  // Set default state for the form\n  const [value, setValue] = useState({\n    title: task.title || '',\n    description: task.description || '',\n    status: task.status || '',\n  });\n\n  // Update the state when a user types in the form\n  const onChange = (event) => {\n    setValue({\n      ...value,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <Wrapper>\n      <Form\n        onSubmit={(e) => {\n        e.preventDefault();\n        if (type === 'edit') {\n        action({\n        variables: { id: task.id, status: value.status },\n        });\n        } else {\n        action({\n        variables: { ...value },\n        });\n      }\n    }}\n    >\n        {/* Show title and description fields only in \"new\" mode */}\n        {type === 'new' && (\n          <>\n            <Input\n              required\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Task title\"\n              value={value.title}\n              onChange={onChange}\n            />\n            <Input\n              required\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"Task description\"\n              value={value.description}\n              onChange={onChange}\n            />\n          </>\n        )}\n\n        {/* Status field is always shown */}\n        <TextArea\n          required\n          type=\"text\"\n          name=\"status\"\n          placeholder=\"Task status\"\n          value={value.status}\n          onChange={onChange}\n        />\n        <Button type=\"submit\">{type === 'edit' ? 'Update' : 'Create'}</Button>\n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default TaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}