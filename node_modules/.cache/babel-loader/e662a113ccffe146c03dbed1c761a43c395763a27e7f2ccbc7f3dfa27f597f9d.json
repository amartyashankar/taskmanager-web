{"ast":null,"code":"var _jsxFileName = \"/Users/amartyashankar/final copy 2/Projects/notedly/web/src/pages/task.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom'; // Import useParams hook\n\n// Import the Note component\nimport Task from '../components/Task';\nimport { GET_TASK } from '../gql/query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  // Get the id from the URL using useParams\n  const {\n    id\n  } = useParams(); // useParams hook for React Router v6\n\n  // Query hook, passing the id value as a variable\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TASK, {\n    variables: {\n      id\n    }\n  });\n\n  // If the data is loading, display a loading message\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 23\n  }, this);\n\n  // If there is an error fetching the data, display an error message\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error! Note not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 21\n  }, this);\n\n  // If the data is successful, display the data in our UI\n  return /*#__PURE__*/_jsxDEV(Task, {\n    task: data.task\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_s(TaskPage, \"ewfendcS3PSa2ath3oPz+m0pI8Y=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useQuery","useParams","Task","GET_TASK","jsxDEV","_jsxDEV","TaskPage","_s","id","loading","error","data","variables","children","fileName","_jsxFileName","lineNumber","columnNumber","task","_c","$RefreshReg$"],"sources":["/Users/amartyashankar/final copy 2/Projects/notedly/web/src/pages/task.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';  // Import useParams hook\n\n// Import the Note component\nimport Task from '../components/Task';\nimport { GET_TASK } from '../gql/query';\n\nconst TaskPage = () => {\n  // Get the id from the URL using useParams\n  const { id } = useParams();  // useParams hook for React Router v6\n\n  // Query hook, passing the id value as a variable\n  const { loading, error, data } = useQuery(GET_TASK, { variables: { id } });\n\n  // If the data is loading, display a loading message\n  if (loading) return <p>Loading...</p>;\n\n  // If there is an error fetching the data, display an error message\n  if (error) return <p>Error! Note not found</p>;\n\n  // If the data is successful, display the data in our UI\n  return <Task task={data.task} />;\n};\n\nexport default TaskPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAE;;AAE/C;AACA,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,QAAQ,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAE;;EAE7B;EACA,MAAM;IAAEQ,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGX,QAAQ,CAACG,QAAQ,EAAE;IAAES,SAAS,EAAE;MAAEJ;IAAG;EAAE,CAAC,CAAC;;EAE1E;EACA,IAAIC,OAAO,EAAE,oBAAOJ,OAAA;IAAAQ,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;;EAErC;EACA,IAAIP,KAAK,EAAE,oBAAOL,OAAA;IAAAQ,QAAA,EAAG;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;;EAE9C;EACA,oBAAOZ,OAAA,CAACH,IAAI;IAACgB,IAAI,EAAEP,IAAI,CAACO;EAAK;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC,CAAC;AAACV,EAAA,CAfID,QAAQ;EAAA,QAEGL,SAAS,EAGSD,QAAQ;AAAA;AAAAmB,EAAA,GALrCb,QAAQ;AAiBd,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}