{"ast":null,"code":"var _jsxFileName = \"/Users/amartyashankar/final copy 2/Projects/notedly/web/src/pages/profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_ME } from '../gql/query'; // Query to fetch the current user's details\nimport User from '../components/User'; // Import the User component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  useEffect(() => {\n    document.title = 'Users';\n  });\n\n  // Query hook to fetch current logged-in user\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ME);\n\n  // If the data is loading, display a loading message\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 23\n  }, this);\n\n  // If there is an error fetching the data, display an error message\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error fetching user data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 21\n  }, this);\n\n  // If the data is successful, pass the user data as a prop to the User component\n  return /*#__PURE__*/_jsxDEV(User, {\n    user: data.me\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n_s(Profile, \"DWAzq7+kjYOAqVKycDjm6WLSk9g=\", false, function () {\n  return [useQuery];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useQuery","GET_ME","User","jsxDEV","_jsxDEV","Profile","_s","document","title","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","user","me","_c","$RefreshReg$"],"sources":["/Users/amartyashankar/final copy 2/Projects/notedly/web/src/pages/profile.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport { useQuery } from '@apollo/client'; \nimport { GET_ME } from '../gql/query'; // Query to fetch the current user's details\nimport User from '../components/User'; // Import the User component\n\nconst Profile = () => {\n    useEffect(() => {\n        document.title = 'Users';\n      });\n    \n  // Query hook to fetch current logged-in user\n  const { loading, error, data } = useQuery(GET_ME);\n\n  // If the data is loading, display a loading message\n  if (loading) return <p>Loading...</p>;\n\n  // If there is an error fetching the data, display an error message\n  if (error) return <p>Error fetching user data</p>;\n\n  // If the data is successful, pass the user data as a prop to the User component\n  return <User user={data.me} />;\n};\n\nexport default Profile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,MAAM,QAAQ,cAAc,CAAC,CAAC;AACvC,OAAOC,IAAI,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClBP,SAAS,CAAC,MAAM;IACZQ,QAAQ,CAACC,KAAK,GAAG,OAAO;EAC1B,CAAC,CAAC;;EAEN;EACA,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGX,QAAQ,CAACC,MAAM,CAAC;;EAEjD;EACA,IAAIQ,OAAO,EAAE,oBAAOL,OAAA;IAAAQ,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;;EAErC;EACA,IAAIN,KAAK,EAAE,oBAAON,OAAA;IAAAQ,QAAA,EAAG;EAAwB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;;EAEjD;EACA,oBAAOZ,OAAA,CAACF,IAAI;IAACe,IAAI,EAAEN,IAAI,CAACO;EAAG;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChC,CAAC;AAACV,EAAA,CAhBID,OAAO;EAAA,QAMsBL,QAAQ;AAAA;AAAAmB,EAAA,GANrCd,OAAO;AAkBb,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}